#biniyam 
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def push(self, new_data):
        new_node = Node(new_data)
        new_node.next = self.head
        self.head = new_node

    def reverse(self):
        stack = []
        ptr = self.head
        while ptr is not None:
            stack.append(ptr)
            ptr = ptr.next
        self.head = ptr
        while len(stack) > 0:
            ptr.next = stack.pop()
            ptr = ptr.next
        ptr.next = None

    def printList(self):
        ptr = self.head
        while ptr is not None:
            print(ptr.data, end=' ')
            ptr = ptr.next

# Driver code
llist = LinkedList()
llist.push('Melat')
llist.push('John')
llist.push('Yeabnat')
llist.push('Sisay')
llist.push('Tikdem')

print("Original Linked List:")
llist.printList()

llist.reverse()

print("\nReversed Linked List:")
llist.printList()
